{
  user(login: "{username}") {
    branchPR: pullRequests(first: 10, headRefName: "{branchname}") {
      nodes {
        number
        title
        url
      }
    }
    openPRs: pullRequests(last: 50, states: [OPEN]) {
      totalCount
      nodes {
        number
        url
        title
        headRefName
        mergeable
        commits(last:1) {
          nodes {
            commit {
              oid
              status {
                state
              }
            }
          }
        }
        reviewRequests(last: 50) {
          nodes {
            id
            requestedReviewer {
              ... on User {
                login
                name
              }
            }
          }
        }
        reviews(last: 50, states: [PENDING, COMMENTED, APPROVED, CHANGES_REQUESTED, DISMISSED]) {
          nodes {
            id
            state
            author {
              avatarUrl
              login
              resourcePath
              url
            }
          }
        }
      }
      pageInfo {
        hasNextPage
        endCursor
      }
    }
  }
  reviewRequests: search(query: "is:open is:pr review-requested:{username} archived:false", type: ISSUE, first: 10) {
    nodes {
      ... on PullRequest {
        number
        title
        url
        author {
          login
        }
      }
    }
  }
}
